// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;

namespace MemcardRex
{
	public partial class HeaderDialogController : NSViewController
	{
        #region Private Variables
        private string _dialogTitle = "";
        private string _productCode = "";
        private string _identifier = "";
        private string _region = "";
        private NSViewController _presentor;
        #endregion

        #region Computed Properties
        public string DialogTitle
        {
            get { return _dialogTitle; }
            set { _dialogTitle = value; }
        }

        public string ProductCode
        {
            get { return _productCode; }
            set { _productCode = value; }
        }

        public string IdentifierString
        {
            get { return _identifier; }
            set { _identifier = value; }
        }

        public string Region
        {
            get { return _region; }
            set { _region = value; }
        }

        public NSViewController Presentor
        {
            get { return _presentor; }
            set { _presentor = value; }
        }
        #endregion

        public HeaderDialogController (IntPtr handle) : base (handle)
		{
		}

        #region Override Methods
        public override void ViewWillAppear()
        {
            base.ViewWillAppear();

            this.View.Window.Title = DialogTitle;

            IdentifierInput.StringValue = IdentifierString;
            ProductCodeInput.StringValue = ProductCode;
            RegionCombo.StringValue = Region;

            //Disable resizing of modal dialog
            this.View.Window.StyleMask &= ~NSWindowStyle.Resizable;
        }
        #endregion

        #region Events
        public EventHandler DialogAccepted;

        internal void RaiseDialogAccepted()
        {
            if (this.DialogAccepted != null)
                this.DialogAccepted(this, EventArgs.Empty);
        }

        public EventHandler DialogCanceled;

        internal void RaiseDialogCanceled()
        {
            if (this.DialogCanceled != null)
                this.DialogCanceled(this, EventArgs.Empty);
        }
        #endregion

        [Export("CancelDialog:")]
        void CancelDialoga(NSObject sender)
        {
            RaiseDialogCanceled();
            Presentor.DismissViewController(this);
        }

        [Export("ConfirmDialog:")]
        void AcceptDialog(NSObject sender)
        {
            //Save changes
            IdentifierString = IdentifierInput.StringValue;
            ProductCode = ProductCodeInput.StringValue;
            Region = RegionCombo.StringValue;

            RaiseDialogAccepted();
            Presentor.DismissViewController(this);
        }
    }
}
